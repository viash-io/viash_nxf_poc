functionality:
  name: poc
  description: |
    This is a multiline description
  authors:
    - name: Foo Bar
      email: foo@bar.com
      roles: maintainer
  arguments:
    # INPUTS
    - name: "--input_one"
      type: file
      required: true
      multiple: false
      example: "input.txt"
      description: Input one.
    - name: "--input_multi"
      type: file
      required: true
      multiple: true
      example: "input.txt"
      description: Input multiple.
    - name: "--input_opt"
      type: file
      required: false
      multiple: false
      example: "input.txt"
      description: Input optional.
    
    # OUTPUTS
    - name: "--output_one"
      type: file
      required: true
      multiple: false
      example: "output.txt"
      description: Output one.
      direction: output
    - name: "--output_multi"
      type: file
      required: false
      multiple: true
      example: "output.txt"
      description: Output multiple.
      direction: output
    - name: "--output_opt"
      type: file
      required: false
      multiple: false
      example: "output.txt"
      description: Output optional.
      direction: output
    
    # PARAMETERS
    - name: "--string"
      type: string
      description: "String"
      default: "A string"
    - name: "--integer"
      type: integer
      description: "Integer"
      default: 10
    - name: "--doubles"
      type: double
      description: "Doubles"
      multiple: true
      default: [ 5.5, 4.5 ]
    - name: "--flag_true"
      type: boolean_true
      description: "Flag true"
    - name: "--flag_false"
      type: boolean_false
      description: "Flag false"
    - name: "--boolean"
      type: boolean
      description: "Boolean"
      default: true
  resources:
    - type: r_script
      dest: script.R
      text: |
        print(par)

        print('""" test """')

        input_one <- readr::read_lines(par$input_one)
        input_multi <- lapply(par$input_multi, readr::read_lines)

        readr::write_lines(c(input_one, par$string), par$output_one)

        for (i in seq_along(input_multi)) {
          if (length(par$output_multi) == 1 && grepl("\\*", par$output_multi)) {
            path <- gsub("\\*", i, par$output_multi)
          } else if (length(par$output_multi) == length(input_multi)) {
            path <- par$output_multi[[i]]
          } else {
            stop("Unexpected output_multi format.")
          }
          readr::write_lines(c(input_multi[[i]], par$string), path)
        }

        if (!is.null(par$input_opt)) {
          input_opt <- readr::read_lines(par$input_opt)
          readr::write_lines(c(input_opt, par$string), par$output_opt)
        }
platforms:
  - type: docker
    image: rocker/tidyverse:4.0.5
  - type: native
  - type: nextflow
    publish: true
  - type: nextflowpoc
    directives:
      container: "rocker/tidyverse:4.0.5" # need to manually define container for now
      cache: lenient
