docker.enabled = true
docker.runOptions = "-i -v ${baseDir}:${baseDir}"
process.container = "dataintuitive/viash"


params.normalize__input_rna = "viash_no_value"
params.normalize__input_mod2 = "viash_no_value"
params.normalize__output_rna = "viash_no_value"
params.normalize__output_mod2 = "viash_no_value"
params.normalize__min_counts_per_gene = "100"
params.normalize__min_counts_per_cell = "100"
params.id = ""
params.testScript = "test.R"
params.testResources = [ "test.R", "." ]
params.normalize.name = "normalize"
params.normalize.container = "common_normalize_normalize"
params.normalize.containerTag = "dev"
params.normalize.containerRegistry = ""
params.normalize.command = "normalize"
params.normalize.arguments.input_rna.name = "input_rna"
params.normalize.arguments.input_rna.otype = "--"
params.normalize.arguments.input_rna.required = true
params.normalize.arguments.input_rna.type = "file"
params.normalize.arguments.input_rna.direction = "Input"
params.normalize.arguments.input_rna.multiple = false
params.normalize.arguments.input_rna.multiple_sep = ":"
params.normalize.arguments.input_rna.value = "${params.normalize__input_rna}"
params.normalize.arguments.input_rna.example = "input.h5ad"
params.normalize.arguments.input_rna.description = "Raw dataset in a h5ad file."
params.normalize.arguments.input_mod2.name = "input_mod2"
params.normalize.arguments.input_mod2.otype = "--"
params.normalize.arguments.input_mod2.required = true
params.normalize.arguments.input_mod2.type = "file"
params.normalize.arguments.input_mod2.direction = "Input"
params.normalize.arguments.input_mod2.multiple = false
params.normalize.arguments.input_mod2.multiple_sep = ":"
params.normalize.arguments.input_mod2.value = "${params.normalize__input_mod2}"
params.normalize.arguments.input_mod2.example = "input.h5ad"
params.normalize.arguments.input_mod2.description = "Raw dataset in a h5ad file."
params.normalize.arguments.output_rna.name = "output_rna"
params.normalize.arguments.output_rna.otype = "--"
params.normalize.arguments.output_rna.required = true
params.normalize.arguments.output_rna.type = "file"
params.normalize.arguments.output_rna.direction = "Output"
params.normalize.arguments.output_rna.multiple = false
params.normalize.arguments.output_rna.multiple_sep = ":"
params.normalize.arguments.output_rna.value = "${params.normalize__output_rna}"
params.normalize.arguments.output_rna.example = "output.h5ad"
params.normalize.arguments.output_rna.description = "Normalized h5ad file."
params.normalize.arguments.output_mod2.name = "output_mod2"
params.normalize.arguments.output_mod2.otype = "--"
params.normalize.arguments.output_mod2.required = true
params.normalize.arguments.output_mod2.type = "file"
params.normalize.arguments.output_mod2.direction = "Output"
params.normalize.arguments.output_mod2.multiple = false
params.normalize.arguments.output_mod2.multiple_sep = ":"
params.normalize.arguments.output_mod2.value = "${params.normalize__output_mod2}"
params.normalize.arguments.output_mod2.example = "output.h5ad"
params.normalize.arguments.output_mod2.description = "Normalized h5ad file."
params.normalize.arguments.min_counts_per_gene.name = "min_counts_per_gene"
params.normalize.arguments.min_counts_per_gene.otype = "--"
params.normalize.arguments.min_counts_per_gene.required = false
params.normalize.arguments.min_counts_per_gene.type = "integer"
params.normalize.arguments.min_counts_per_gene.direction = "Input"
params.normalize.arguments.min_counts_per_gene.multiple = false
params.normalize.arguments.min_counts_per_gene.multiple_sep = ":"
params.normalize.arguments.min_counts_per_gene.value = "${params.normalize__min_counts_per_gene}"
params.normalize.arguments.min_counts_per_gene.dflt = "100"
params.normalize.arguments.min_counts_per_gene.description = "Minimum counts per gene."
params.normalize.arguments.min_counts_per_cell.name = "min_counts_per_cell"
params.normalize.arguments.min_counts_per_cell.otype = "--"
params.normalize.arguments.min_counts_per_cell.required = false
params.normalize.arguments.min_counts_per_cell.type = "integer"
params.normalize.arguments.min_counts_per_cell.direction = "Input"
params.normalize.arguments.min_counts_per_cell.multiple = false
params.normalize.arguments.min_counts_per_cell.multiple_sep = ":"
params.normalize.arguments.min_counts_per_cell.value = "${params.normalize__min_counts_per_cell}"
params.normalize.arguments.min_counts_per_cell.dflt = "100"
params.normalize.arguments.min_counts_per_cell.description = "Minimum counts per cell."

